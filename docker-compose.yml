services:
  wp:
    depends_on:
      - db
    image: wordpress:latest
    container_name: ${PROJECT_NAME}_wp
    volumes:
      # WordPress
      - ./www/wp-core:/var/www/html
      - ./www/themes:/var/www/html/wp-content/themes
      - ./www/plugins:/var/www/html/wp-content/plugins
      - ./www/uploads:/var/www/html/wp-content/uploads

      # Configs
      - ./configs/php.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./configs/error-logging.ini:/usr/local/etc/php/conf.d/error-logging.ini
    ports:
      - ${WP_PORTS}
    restart: always
    environment:
      # debug mode
      WORDPRESS_DEBUG: 1

      # docker wp-config settings
      WORDPRESS_DB_HOST: ${DB_HOST}
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}

      WORDPRESS_CONFIG_EXTRA: |
        define('WP_CACHE', false);

    networks:
      - wp-network

  wpcli:
    image: wordpress:cli
    container_name: ${PROJECT_NAME}_wpcli
    volumes:
      # WordPress
      - ./www/wp-core:/var/www/html
      - ./www/themes:/var/www/html/wp-content/themes
      - ./www/plugins:/var/www/html/wp-content/plugins
      - ./www/uploads:/var/www/html/wp-content/uploads
      - ./www/logs:/var/www/html/wp-content/logs

      # Configs
      - ./configs/php.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./configs/error-logging.ini:/usr/local/etc/php/conf.d/error-logging.ini
    entrypoint: wp
    environment:
      WORDPRESS_DB_HOST: ${DB_HOST}
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
      - wp
    networks:
      - wp-network

  db:
    image: mariadb:10.11
    container_name: ${PROJECT_NAME}_db
    volumes:
      - ./db:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - wp-network

  pma:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: ${PROJECT_NAME}_pma
    restart: always
    ports:
      - ${PMA_PORTS}
    environment:
      PMA_HOST: ${DB_HOST}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - wp-network

networks:
  wp-network:
    driver: bridge
